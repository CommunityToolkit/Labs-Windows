
# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Needed until XAML Styler updates to .NET 6
      - name: Install .NET Core 3.1 SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'

      - name: Install .NET 6 SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.201'

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout Repository
        uses: actions/checkout@v2

      # Restore Tools from Manifest list in the Repository
      - name: Restore dotnet tools
        run: dotnet tool restore

      - name: Check XAML Styling
        run: ./ApplyXamlStyling.ps1 -Passive

      - name: Run Uno Check to Install Dependencies
        run: dotnet tool run uno-check --ci --fix --non-interactive --skip wsl --skip androidemulator #--verbose

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.3
        
      - name: MSBuild
       # working-directory: ./
        run: msbuild.exe Toolkit.Labs.All.sln /restore -p:Configuration=Release
        
      # Build All Packages - TODO: Detect experiments
      - name: pack CanvasLayout
        working-directory: ./Labs/CanvasLayout/Src
        run: msbuild -t:pack /p:Configuration=Release /p:DebugType=Portable

      # Push Packages to our DevOps Artifacts Feed                       
      - name: Add source
        run: dotnet nuget add source "https://pkgs.dev.azure.com/dotnet/CommunityToolkit/_packaging/CommunityToolkit-Labs/nuget/v3/index.json" --name LabsFeed --username dummy --password ${{ secrets.DEVOPS_PACKAGE_PUSH_TOKEN }}
        
      - name: Push packages
        if: ${{github.ref == 'refs/heads/main'}}
        run: dotnet nuget push "**/*.nupkg" --api-key dummy --source LabsFeed --skip-duplicate
