<!--  Licensed to the .NET Foundation under one or more agreements. The .NET Foundation licenses this file to you under the MIT license. See the LICENSE file in the project root for more information.  -->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:contract8="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,8)"
                    xmlns:controls="using:CommunityToolkit.WinUI.Controls">

    <x:Double x:Key="RibbonGroupButtonChevronSize">8</x:Double>
    <x:Double x:Key="RibbonGroupContentMinHeight">72</x:Double>
    <Thickness x:Key="RibbonGroupButtonIconMargin">0,0,0,4</Thickness>
    <Thickness x:Key="RibbonGroupPadding">12,4</Thickness>
    <Thickness x:Key="RibbonGroupFlyoutPadding">4</Thickness>
    <Thickness x:Key="RibbonContentPadding">0,4</Thickness>

    <Style x:Key="RibbonGroupLabelStyle"
           TargetType="TextBlock">
        <Setter Property="Foreground" Value="{ThemeResource TextFillColorSecondaryBrush}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="MaxWidth" Value="100" />
        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
        <Setter Property="AutomationProperties.AccessibilityView" Value="Raw" />
        <Setter Property="Margin" Value="0,4,0,0" />
    </Style>

    <Style x:Key="RibbonGroupFlyoutLabelStyle"
           BasedOn="{StaticResource RibbonGroupLabelStyle}"
           TargetType="TextBlock">
        <Setter Property="MaxWidth" Value="200" />
    </Style>

    <Style x:Key="RibbonGroupButtonStyle"
           BasedOn="{StaticResource DefaultButtonStyle}"
           TargetType="Button">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
    </Style>

    <Style x:Key="RibbonGroupFlyoutStyle"
           BasedOn="{StaticResource DefaultFlyoutPresenterStyle}"
           TargetType="FlyoutPresenter">
        <Setter Property="Padding" Value="{StaticResource RibbonGroupFlyoutPadding}" />
        <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
        <Setter Property="BorderBrush" Value="{ThemeResource CardStrokeColorDefaultSolidBrush}" />
    </Style>

    <Style x:Key="DefaultRibbonGroupStyle"
           TargetType="controls:RibbonGroup">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Padding" Value="{StaticResource RibbonGroupPadding}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:RibbonGroup">
                    <Grid Padding="{TemplateBinding Padding}"
                          AutomationProperties.Name="{TemplateBinding Label}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"
                                           MinHeight="{StaticResource RibbonGroupContentMinHeight}" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Content="{TemplateBinding Content}" />

                        <TextBlock Grid.Row="1"
                                   Style="{StaticResource RibbonGroupLabelStyle}"
                                   Text="{TemplateBinding Label}">
                            <ToolTipService.ToolTip>
                                <ToolTip Content="{TemplateBinding Label}"
                                         Placement="Bottom"
                                         Visibility="{Binding ElementName=Label, Path=IsTextTrimmed}" />
                            </ToolTipService.ToolTip>
                        </TextBlock>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultRibbonCollapsibleGroupStyle"
           TargetType="controls:RibbonCollapsibleGroup">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Padding" Value="{StaticResource RibbonGroupPadding}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:RibbonCollapsibleGroup">
                    <Grid Padding="{TemplateBinding Padding}"
                          AutomationProperties.Name="{TemplateBinding Label}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"
                                           MinHeight="{StaticResource RibbonGroupContentMinHeight}" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <ContentControl x:Name="VisibleContentContainer"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        IsTabStop="False"
                                        Visibility="Collapsed" />

                        <Button x:Name="CollapsedButton"
                                AccessKey="{TemplateBinding CollapsedAccessKey}"
                                AutomationProperties.Name="{TemplateBinding Label}"
                                Style="{StaticResource RibbonGroupButtonStyle}">
                            <StackPanel>
                                <IconSourceElement Margin="{StaticResource RibbonGroupButtonIconMargin}"
                                                   IconSource="{TemplateBinding IconSource}" />
                                <FontIcon FontSize="{StaticResource RibbonGroupButtonChevronSize}"
                                          Glyph="&#xE70D;" />
                            </StackPanel>

                            <Button.Flyout>
                                <Flyout x:Name="CollapsedFlyout"
                                        contract8:ShouldConstrainToRootBounds="False"
                                        FlyoutPresenterStyle="{StaticResource RibbonGroupFlyoutStyle}"
                                        Placement="Bottom">
                                    <StackPanel AutomationProperties.Name="{TemplateBinding Label}"
                                                IsAccessKeyScope="True">
                                        <ContentControl x:Name="CollapsedContentPresenter"
                                                        HorizontalAlignment="Center"
                                                        IsTabStop="False" />
                                        <TextBlock x:Name="FlyoutLabel"
                                                   Style="{StaticResource RibbonGroupFlyoutLabelStyle}"
                                                   Text="{TemplateBinding Label}">
                                            <ToolTipService.ToolTip>
                                                <ToolTip Content="{TemplateBinding Label}"
                                                         Placement="Bottom"
                                                         Visibility="{Binding ElementName=FlyoutLabel, Path=IsTextTrimmed}" />
                                            </ToolTipService.ToolTip>
                                        </TextBlock>

                                    </StackPanel>
                                </Flyout>
                            </Button.Flyout>
                        </Button>

                        <TextBlock x:Name="Label"
                                   Grid.Row="1"
                                   Style="{StaticResource RibbonGroupLabelStyle}"
                                   Text="{TemplateBinding Label}">
                            <ToolTipService.ToolTip>
                                <ToolTip Content="{TemplateBinding Label}"
                                         Placement="Bottom"
                                         Visibility="{Binding ElementName=Label, Path=IsTextTrimmed}" />
                            </ToolTipService.ToolTip>
                        </TextBlock>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource DefaultRibbonGroupStyle}"
           TargetType="controls:RibbonGroup" />
    <Style BasedOn="{StaticResource DefaultRibbonCollapsibleGroupStyle}"
           TargetType="controls:RibbonCollapsibleGroup" />

    <Style x:Key="RibbonLeftGroupStyle"
           BasedOn="{StaticResource DefaultRibbonGroupStyle}"
           TargetType="controls:RibbonGroup">
        <Setter Property="BorderBrush" Value="{ThemeResource DividerStrokeColorDefaultBrush}" />
        <Setter Property="BorderThickness" Value="0,0,1,0" />
    </Style>

    <Style x:Key="RibbonRightGroupStyle"
           BasedOn="{StaticResource DefaultRibbonGroupStyle}"
           TargetType="controls:RibbonGroup">
        <Setter Property="BorderBrush" Value="{ThemeResource DividerStrokeColorDefaultBrush}" />
        <Setter Property="BorderThickness" Value="1,0,0,0" />
    </Style>

    <Style x:Key="RibbonLeftCollapsibleGroupStyle"
           BasedOn="{StaticResource DefaultRibbonCollapsibleGroupStyle}"
           TargetType="controls:RibbonCollapsibleGroup">
        <Setter Property="BorderBrush" Value="{ThemeResource DividerStrokeColorDefaultBrush}" />
        <Setter Property="BorderThickness" Value="0,0,1,0" />
    </Style>

    <Style x:Key="RibbonRightCollapsibleGroupStyle"
           BasedOn="{StaticResource DefaultRibbonCollapsibleGroupStyle}"
           TargetType="controls:RibbonCollapsibleGroup">
        <Setter Property="BorderBrush" Value="{ThemeResource DividerStrokeColorDefaultBrush}" />
        <Setter Property="BorderThickness" Value="1,0,0,0" />
    </Style>

    <!--
        Same template as the default one except:
        - SizesContentToTemplatedParent="True" on the ScrollContentPresenter
        - HorizontalAlignment="Left" on the ScrollContentPresenter
        - HorizontalScrollBarVisibility set to Hidden
        - Keeps only the ScrollContentPresenter
    -->
    <Style x:Key="RibbonScrollViewer"
           BasedOn="{StaticResource DefaultScrollViewerStyle}"
           TargetType="ScrollViewer">
        <Setter Property="VerticalScrollMode" Value="Disabled" />
        <Setter Property="VerticalScrollBarVisibility" Value="Hidden" />
        <Setter Property="HorizontalScrollMode" Value="Auto" />
        <Setter Property="HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Border x:Name="Root"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}">
                        <ScrollContentPresenter x:Name="ScrollContentPresenter"
                                                Margin="{TemplateBinding Padding}"
                                                HorizontalAlignment="Left"
                                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                                SizesContentToTemplatedParent="True" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  This is based on https://github.com/microsoft/microsoft-ui-xaml/blob/winui2/main/dev/CommonStyles/ScrollBar_themeresources.xaml  -->
    <Style x:Key="RibbonScrollButtonStyle"
           TargetType="RepeatButton">
        <Setter Property="Background" Value="{ThemeResource ControlSolidFillColorDefault}" />
        <Setter Property="BackgroundSizing" Value="InnerBorderEdge" />
        <Setter Property="Foreground" Value="{ThemeResource ButtonForeground}" />
        <Setter Property="BorderBrush" Value="{ThemeResource CardStrokeColorDefaultSolid}" />
        <Setter Property="BorderThickness" Value="{ThemeResource ButtonBorderThemeThickness}" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="AllowFocusOnInteraction" Value="False" />
        <Setter Property="Interval" Value="50" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Grid x:Name="Root"
                          Padding="4"
                          VerticalAlignment="Stretch"
                          Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          CornerRadius="{TemplateBinding CornerRadius}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow"
                                                                       Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource ButtonForegroundPointerOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root"
                                                                       Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource SolidBackgroundFillColorQuarternary}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow"
                                                                       Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource ButtonForegroundPressed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames RepeatBehavior="Forever"
                                                                       Storyboard.TargetName="Arrow"
                                                                       Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0.016"
                                                                    Value="{ThemeResource ScrollBarButtonArrowScalePressed}" />
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:30"
                                                                    Value="{ThemeResource ScrollBarButtonArrowScalePressed}" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames RepeatBehavior="Forever"
                                                                       Storyboard.TargetName="Arrow"
                                                                       Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0.016"
                                                                    Value="{ThemeResource ScrollBarButtonArrowScalePressed}" />
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:30"
                                                                    Value="{ThemeResource ScrollBarButtonArrowScalePressed}" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root"
                                                                       Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource SolidBackgroundFillColorBase}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow"
                                                                       Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource ButtonForegroundDisabled}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root"
                                                                       Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource SolidBackgroundFillColorQuarternary}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <FontIcon x:Name="Arrow"
                                  FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                  FontSize="{StaticResource ScrollBarButtonArrowIconFontSize}"
                                  Foreground="{TemplateBinding Foreground}"
                                  Glyph="{TemplateBinding Content}"
                                  MirroredWhenRightToLeft="True"
                                  RenderTransformOrigin="0.5, 0.5">
                            <FontIcon.RenderTransform>
                                <ScaleTransform x:Name="ScaleTransform" ScaleX="1" ScaleY="1" />
                            </FontIcon.RenderTransform>
                        </FontIcon>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RibbonScrollDecrementButtonStyle"
           BasedOn="{StaticResource RibbonScrollButtonStyle}"
           TargetType="RepeatButton">
        <Setter Property="Content" Value="&#xEDD9;" />
        <Setter Property="CornerRadius" Value="4,0,0,4" />
    </Style>

    <Style x:Key="RibbonScrollIncrementButtonStyle"
           BasedOn="{StaticResource RibbonScrollButtonStyle}"
           TargetType="RepeatButton">
        <Setter Property="Content" Value="&#xEDDA;" />
        <Setter Property="CornerRadius" Value="0,4,4,0" />
    </Style>

    <Style TargetType="controls:Ribbon">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Background" Value="{ThemeResource LayerFillColorDefaultBrush}" />
        <Setter Property="BorderBrush" Value="{ThemeResource CardStrokeColorDefaultSolidBrush}" />
        <Setter Property="BorderThickness" Value="0,1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:Ribbon">
                    <Grid Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ScrollButtonGroup">
                                <VisualState x:Name="NoButtons" />
                                <VisualState x:Name="DecrementButton">
                                    <VisualState.Setters>
                                        <Setter Target="ScrollDecrementButton.Visibility" Value="Visible" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="IncrementButton">
                                    <VisualState.Setters>
                                        <Setter Target="ScrollIncrementButton.Visibility" Value="Visible" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="BothButtons">
                                    <VisualState.Setters>
                                        <Setter Target="ScrollDecrementButton.Visibility" Value="Visible" />
                                        <Setter Target="ScrollIncrementButton.Visibility" Value="Visible" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <ScrollViewer x:Name="ScrollViewer"
                                      Grid.ColumnSpan="3"
                                      Padding="{StaticResource RibbonContentPadding}"
                                      Style="{StaticResource RibbonScrollViewer}">
                            <controls:RibbonPanel x:Name="Panel" />
                        </ScrollViewer>

                        <RepeatButton x:Name="ScrollDecrementButton"
                                      Grid.Column="0"
                                      Style="{StaticResource RibbonScrollDecrementButtonStyle}"
                                      Visibility="Collapsed" />
                        <RepeatButton x:Name="ScrollIncrementButton"
                                      Grid.Column="2"
                                      Style="{StaticResource RibbonScrollIncrementButtonStyle}"
                                      Visibility="Collapsed" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
