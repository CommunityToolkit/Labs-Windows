<Project>
  <Import Project="$([MSBuild]::GetPathOfFileAbove(Directory.Build.props))" Condition="Exists('$([MSBuild]::GetPathOfFileAbove(Directory.Build.props))')" />
  <PropertyGroup>
    <ToolkitComponentName>AppServices</ToolkitComponentName>
    <Description>This package contains AppServices, to easily communicate between UWP apps and Win32 extensions.</Description>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <RootNamespace>CommunityToolkit.AppServices</RootNamespace>
    <PackageId>$(PackageIdPrefix).$(ToolkitComponentName)</PackageId>
    <HasWindowsUIXaml>false</HasWindowsUIXaml>
    <HasWinUI>false</HasWinUI>
    <EnableXamlCompilerMismatchedTfmUnoWorkaround>false</EnableXamlCompilerMismatchedTfmUnoWorkaround>

    <!-- This library doesn't need XAML support, so we can just target 17763 (also disable the UWP build tools) -->
    <UseUwpTools>false</UseUwpTools>
    <UwpTargetFrameworks>uap10.0.17763;net8.0-windows10.0.17763.0;net9.0-windows10.0.17763.0;</UwpTargetFrameworks>
  </PropertyGroup>

  <!-- Sets this up as a toolkit component's source project -->
  <Import Project="$(ToolingDirectory)\ToolkitComponent.SourceProject.props" />

  <ItemGroup>
    <PackageReference Include="PolySharp" Version="1.13.2" PrivateAssets="All" />
  </ItemGroup>

  <!-- Only include the polyfills the library needs (to minimize binary size) -->
  <PropertyGroup>
    <PolySharpIncludeGeneratedTypes>
      System.Diagnostics.CodeAnalysis.NotNullAttribute;
      System.Diagnostics.CodeAnalysis.NotNullWhenAttribute;
      System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute;
      System.Diagnostics.CodeAnalysis.MemberNotNullAttribute;
      System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute;
      System.Runtime.CompilerServices.CallerArgumentExpressionAttribute;
    </PolySharpIncludeGeneratedTypes>
  </PropertyGroup>

  <!-- Add the Desktop Extension SDK when on UWP-->
  <ItemGroup Condition="'$(IsUwp)' == 'true' AND '$(MultiTargetPlatformIdentifier)' != 'windows'">
    <SDKReference Include="WindowsDesktop, Version=$(TargetPlatformVersion)">
      <Name>Windows Desktop Extensions for the UWP</Name>
    </SDKReference>
  </ItemGroup>

  <!-- Add the contracts package reference to access WinRT APIs from .NET Standard -->
  <ItemGroup Condition="'$(IsNetstandard)' == 'true'">
    <PackageReference Include="Microsoft.Windows.SDK.Contracts" Version="10.0.26100.1742" />
  </ItemGroup>

  <!-- Source generator project reference for packing -->
  <ItemGroup>
    <ProjectReference Include="..\CommunityToolkit.AppServices.SourceGenerators\CommunityToolkit.AppServices.SourceGenerators.csproj" ReferenceOutputAssembly="false" />
  </ItemGroup>

  <!-- Pack the source generator and the .targets file -->
  <ItemGroup Label="Package">

    <!-- Include the custom .targets file to check the source generator -->
    <None Include="CommunityToolkit.Labs.AppServices.targets" PackagePath="buildTransitive" Pack="true" />
    <None Include="CommunityToolkit.Labs.AppServices.targets" PackagePath="build" Pack="true" />

    <!-- Pack the source generator to the right package folder -->
    <None Include="..\CommunityToolkit.AppServices.SourceGenerators\bin\$(Configuration)\netstandard2.0\CommunityToolkit.AppServices.SourceGenerators.dll" PackagePath="analyzers\dotnet\cs" Pack="true" Visible="false" />
  </ItemGroup>

  <!-- Remove imported global usings -->
  <ItemGroup>
    <Compile Remove="$(ToolingDirectory)\GlobalUsings.cs" />
  </ItemGroup>
</Project>
