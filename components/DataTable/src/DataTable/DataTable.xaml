<!--  Licensed to the .NET Foundation under one or more agreements. The .NET Foundation licenses this file to you under the MIT license. See the LICENSE file in the project root for more information.  -->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="using:CommunityToolkit.WinUI.Controls">

    <!--<ResourceDictionary.ThemeDictionaries>
        <ResourceDictionary x:Key="Light">
            <SolidColorBrush x:Key="MyBrush"
                             Color="#000000" />
        </ResourceDictionary>
        <ResourceDictionary x:Key="Dark">
            <SolidColorBrush x:Key="MyBrush"
                             Color="{StaticResource SystemBaseMediumColor}" />
        </ResourceDictionary>
        <ResourceDictionary x:Key="HighContrast">
            <SolidColorBrush x:Key="MyBrush"
                             Color="{ThemeResource SystemColorButtonFaceColor}" />
        </ResourceDictionary>
    </ResourceDictionary.ThemeDictionaries>

    <Thickness x:Key="DefaultDataTableItemPadding">4,4,4,4</Thickness>

    -->
    <!--  Implicitly applied default style  -->
    <Style BasedOn="{StaticResource DefaultDataTableStyle}"
           TargetType="controls:DataTable" />

    <Style x:Key="DefaultDataTableStyle"
           TargetType="controls:DataTable">
        <Style.Setters>
            <!--  TODO: This is going to be different between ListView and HeaderedItemsControl, how do we want to handle?  -->
            <Setter Property="Padding" Value="8,0" />
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <!--  TODO: Custom panel here...  -->
                        <ItemsStackPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="controls:DataTable">
                        <ItemsPresenter />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>
</ResourceDictionary>
