<Project>
  <PropertyGroup>
    <!--
      TargetFramework for WasmLibTargetFramework, WpfLibTargetFramework, and LinuxLibTargetFramework all use the same value.

      This can't be removed during the evaluation phase without breaking things, so we omit them entirely
      and use the value directly.
    -->
    <TargetFrameworks>
      $(NetStandardCommonTargetFramework);
      $(UwpTargetFramework);
      $(WinAppSdkTargetFramework);
      $(MacOSLibTargetFramework);
      $(iOSLibTargetFramework);
      $(AndroidLibTargetFramework);
    </TargetFrameworks>

    <EnableWindowsTargeting>true</EnableWindowsTargeting>
    <GenerateLibraryLayout>true</GenerateLibraryLayout>
    <EnableDefaultPageItems>false</EnableDefaultPageItems>
    <DefineConstants Condition="'$(TargetFramework)' == '$(WinAppSdkTargetFramework)'">$(DefineConstants);WINAPPSDK</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TargetFramework)' == '$(WinAppSdkTargetFramework)' OR '$(TargetFramework)' == '$(UwpTargetFramework)'">
    <TargetPlatformMinVersion>10.0.17763.0</TargetPlatformMinVersion>
    <TargetPlatformVersion>10.0.19041.0</TargetPlatformVersion>
  </PropertyGroup>
  <PropertyGroup>
    <!-- These suppressions are for references between generated assemblies and that VS can keep in the Error List once resolved -->
    <NoWarn>WMC1006;CS8034;</NoWarn>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Condition="'$(TargetFramework)' == '$(UwpTargetFramework)'" Include="Microsoft.UI.Xaml" Version="2.7.0" />
    <PackageReference Condition="'$(TargetFramework)' == '$(WinAppSdkTargetFramework)'" Include="Microsoft.WindowsAppSDK" Version="1.0.3" />
  </ItemGroup>

  <ItemGroup>
    <Compile Include="$(RepositoryDirectory)common\GlobalUsings_WinUI.cs" />
  </ItemGroup>

  <!-- Automatically include XAML pages within multi-targetted projects (source and samples) -->
  <ItemGroup>
    <Page Include="**\*.xaml" Exclude="bin\**\*.xaml;obj\**\*.xaml" />
    <Compile Update="**\*.xaml.cs">
      <DependentUpon>%(Filename)</DependentUpon>
    </Compile>
    <UpToDateCheckInput Include="**\*.xaml" Exclude="bin\**\*.xaml;obj\**\*.xaml" />
  </ItemGroup>
  <ItemGroup>
    <None Remove="obj\bin\**" />
    <Page Remove="obj\bin\**" />
    <Compile Remove="obj\bin\**" />
    <Content Remove="obj\bin\**" />
    <EmbeddedResource Remove="obj\bin\**" />
    <UpToDateCheckInput Remove="obj\bin\**" />
  </ItemGroup>

  <!-- Workaround for Mac: https://developercommunity.visualstudio.com/t/XamarinMac-binaries-are-missing-in-173/10164443#T-N10164676 10/6/22 -->
  <ItemGroup Condition=" $(TargetFramework.StartsWith('xamarinmac')) ">
    <Reference Include="Xamarin.Mac">
      <HintPath Condition="Exists('c:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\IDE\Extensions\Xamarin.VisualStudio')">c:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\IDE\Extensions\Xamarin.VisualStudio\Xamarin.Mac.dll</HintPath>
      <HintPath Condition="Exists('c:\Program Files\Microsoft Visual Studio\2022\Professional\Common7\IDE\Extensions\Xamarin.VisualStudio')">c:\Program Files\Microsoft Visual Studio\2022\Professional\Common7\IDE\Extensions\Xamarin.VisualStudio\Xamarin.Mac.dll</HintPath>
      <HintPath Condition="Exists('c:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\Extensions\Xamarin.VisualStudio')">c:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\Extensions\Xamarin.VisualStudio\Xamarin.Mac.dll</HintPath>
      <HintPath Condition="Exists('c:\Program Files\Microsoft Visual Studio\2022\Preview\Common7\IDE\Extensions\Xamarin.VisualStudio')">c:\Program Files\Microsoft Visual Studio\2022\Preview\Common7\IDE\Extensions\Xamarin.VisualStudio\Xamarin.Mac.dll</HintPath>
    </Reference>
  </ItemGroup>
</Project>
